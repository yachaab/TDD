# Stage 1: Build stage
FROM python:3.13-slim-bookworm AS builder

# Set working directory
WORKDIR /usr/src/app

# Install system dependencies
RUN apt-get update \
  && apt-get -y install gcc postgresql \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps -r requirements.txt -w /wheels

# Stage 2: Production stage
FROM python:3.13-slim-bookworm

# Set working directory
WORKDIR /usr/src/app

# Install runtime dependencies
RUN apt-get update \
  && apt-get -y install postgresql \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# Copy Python dependencies from the builder stage
COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir /wheels/*

# Copy application code
COPY . .

# Add and run as non-root user
RUN adduser --disabled-password usfachb && chown -R usfachb:usfachb /usr/src/app
USER usfachb

# Expose port
EXPOSE 8000

# Run Gunicorn
CMD gunicorn core.wsgi:application --bind 0.0.0.0:$PORT
