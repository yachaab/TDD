# Stage 1: Build stage
FROM python:3.13-slim-bookworm AS builder
WORKDIR /usr/src/app
RUN apt-get update \
  && apt-get -y install gcc libpq-dev \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps -r requirements.txt -w /wheels
# Stage 2: Production stage
FROM python:3.13-slim-bookworm
ENV DEBUG=0
ENV SECRET_KEY='django-insecure-q#5(uq6v@3!mfz3v8s7g@k+=70w2ozh1eyb2=@-znk=2@a06v^'
ENV DJANGO_ALLOWED_HOSTS='localhost 127.0.0.1 [::1]'
ENV PORT=8080
WORKDIR /usr/src/app
RUN apt-get update \
  && apt-get -y install postgresql \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir /wheels/*
COPY . .
RUN adduser --disabled-password usfachb && chown -R usfachb:usfachb /usr/src/app
USER usfachb
EXPOSE 8080
CMD ["gunicorn", "core.wsgi:application", "--bind", "0.0.0.0:8080"]
